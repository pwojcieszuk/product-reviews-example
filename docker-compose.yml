services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - PGPORT=5432
      - POSTGRES_DB=${DATABASE_DB}
    ports:
      - "${DATABASE_PORT}:5432" # External access port
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: 
      - internal

  redis:
    image: redis:7
    container_name: redis
    networks: 
      - internal

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks: 
      - internal

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - internal

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    environment:
      DATABASE_HOST: postgres
      REDIS_HOST: redis
      KAFKA_BROKER: kafka
      KAFKA_PORT: 9092
    volumes:
      - ./product-service:/app
    ports:
      - "${PRODUCT_SERVICE_PORT}:3000" # External access port
    depends_on:
      - postgres
      - redis
      - kafka
    env_file:
      - .env
    networks:
      - internal

  review-processing-service:
    build:
      context: ./review-processing-service
      dockerfile: Dockerfile
    # container_name: review-processing-service
    environment:
      DATABASE_HOST: postgres
      REDIS_HOST: redis
      KAFKA_BROKER: kafka
      KAFKA_PORT: 9092
      REVIEW_PROCESSING_SERVICE_PORT: ${REVIEW_PROCESSING_SERVICE_PORT}
    volumes:
      - ./review-processing-service:/app
    ports:
      - "0:${REVIEW_PROCESSING_SERVICE_PORT}" # Dynamic external access port
    depends_on:
      - postgres
      - redis
      - kafka
    env_file:
      - .env
    deploy:
      replicas: 2
    networks:
      - internal

volumes:
  pgdata:
    driver: local

networks:
  internal:
    driver: bridge
