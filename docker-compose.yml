services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - PGPORT=${DATABASE_PORT}
      - POSTGRES_DB=${DATABASE_DB}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEPER_PORT}:2181"

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "${KAFKA_PORT}:9092"
    depends_on:
      - zookeeper

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    environment:
      DATABASE_HOST: postgres
      REDIS_HOST: redis
      KAFKA_BROKER: kafka
      KAFKA_PORT: 9092
    volumes:
      - ./product-service:/app
    ports:
      - "${PRODUCT_SERVICE_PORT}:3000"
    depends_on:
      - postgres
      - redis
      - kafka
    env_file:
      - .env

  review-processing-service:
    build:
      context: ./review-processing-service
      dockerfile: Dockerfile
    container_name: review-processing-service
    environment:
      DATABASE_HOST: postgres
      REDIS_HOST: redis
      KAFKA_BROKER: kafka
      KAFKA_PORT: 9092
      REVIEW_PROCESSING_SERVICE_PORT: 3000
    volumes:
      - ./review-processing-service:/app
    ports:
      - "${REVIEW_PROCESSING_SERVICE_PORT}:3000"
    depends_on:
      - postgres
      - redis
      - kafka
    env_file:
      - .env

volumes:
  pgdata:
    driver: local
